#!/usr/bin/env bash

SCRIPT=$(realpath "$0")
SCRIPT_PATH=$(dirname "$SCRIPT")
PID_PATH="${SCRIPT_PATH}/.pid"
LOG_PATH="${SCRIPT_PATH}/run.log"

OAS_TO_GRAPHQL="${SCRIPT_PATH}/../node_modules/.bin/openapi-to-graphql"
OAS_URI="${OAS_URI:-https://petstore.swagger.io/v2/swagger.json}"

GRAPHQL_SERVER_PORT="3009"

KONG_CONF_PATH=${KONG_CONF_PATH:-/etc/kong/kong.conf.default}
KONG_DECLARATIVE_CONFIG=${KONG_DECLARATIVE_CONFIG:-}

unset DOCKER_START


function parse_args() {
  ACTION=$1
  shift

  while [[ $# -gt 0 ]]; do
    case "$1" in
      --oas)
        OAS_URI=$2
        ;;
      --kong-yml)
        KONG_DECLARATIVE_CONFIG=$2
        ;;
      --kong-conf)
        KONG_CONF_PATH=$2
        ;;
      --docker)
        DOCKER_START=1
        ;;
      *)
        ;;
    esac
    shift
  done
}

function instructions() {
cat << EOF

  Usage: kongql <command> --<option>

  Commands:
    start       start GraphQL server
    stop        stop running GrapghQL server
    status      show status of the server

  Options:
    --swagger   URL or PATH of swagger file
    --kong-yml  PATH to kong.yml
    --kong-conf PATH to kong.conf

EOF
}

function start_server() {
  if is_server_running; then
    echo "server is already running"
    exit 0
  fi

  local flags=(
    "$OAS_URI"
    "-p $GRAPHQL_SERVER_PORT"
  )

  if [[ -n "$OAS_BASE_URL" ]]; then
    flags+=("-u $OAS_BASE_URL")
  fi

  nohup "$OAS_TO_GRAPHQL" ${flags[@]} &> "${LOG_PATH}" &
  local pid=$!
  echo "$pid" > "$PID_PATH"
  for i in {0..4}; do
    sleep 0.5
    kill -0 $pid
    [[ $? -ne 0 ]] && cat "${LOG_PATH}" && exit 1
  done
}


function is_server_running() {
  [[ -f "${PID_PATH}" ]] && [[ -n $(ps -p "$(cat "${PID_PATH}")") ]] && return 0
  return 1
}

function stop_server() {
  [[ -f "${PID_PATH}" ]] && kill -9 "$(cat "${PID_PATH}")" && rm "${PID_PATH}"
}


function main() {
  parse_args "$@"

  case $ACTION in
    start)
        echo "starting the server..."
        start_server
        echo "server is running"
        # Kong Dockerfile starts kong in a specific way and a couple of
        # workarounds.
        if [[ -n ${DOCKER_START} ]]; then
          exec /docker-entrypoint.sh kong docker-start -c "${KONG_CONF_PATH}"
        else
          exec kong start -c "${KONG_CONF_PATH}"
        fi
      ;;
    stop)
        echo "stopping the server..."
        stop_server
        echo "server is stopped"
      ;;
    status)
        if is_server_running; then
          echo "server is running"
        else
          echo "server is not running"
        fi
      ;;
    *)
      instructions
      exit 1
      ;;
  esac

}

main "$@"
